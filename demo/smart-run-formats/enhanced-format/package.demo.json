{
  "name": "enhanced-format-demo",
  "version": "1.0.0",
  "description": "Demo of smart-run with enhanced format configuration (titles and emojis)",
  "scripts": {
    "start": "cross-env NODE_ENV=development BABEL_ENV=development webpack serve --config webpack.dev.js --hot --open --port 3000 --host 0.0.0.0 --history-api-fallback --overlay --stats detailed --devtool eval-source-map --watch-options-poll 1000",
    "build": "cross-env NODE_ENV=production BABEL_ENV=production webpack --config webpack.prod.js --mode production --optimization-minimize --optimization-concatenate-modules --optimization-tree-shaking --output-path ./dist --progress --colors --analyze --json > webpack-stats.json",
    "test": "cross-env NODE_ENV=test jest --config jest.config.js --coverage --coverageDirectory=coverage --coverageReporters=text-lcov --coverageReporters=html --coverageThreshold='{\"global\":{\"branches\":80,\"functions\":80,\"lines\":80,\"statements\":80}}' --watchAll=false --ci --forceExit --detectOpenHandles --maxWorkers=4 --testTimeout=30000",
    "test:watch": "cross-env NODE_ENV=test jest --config jest.config.js --watch --coverage --coverageDirectory=coverage --coverageReporters=text --notify --onlyChanged --changedSince=HEAD --watchman --verbose",
    "lint": "eslint src/**/*.{js,jsx,ts,tsx} --config .eslintrc.js --cache --cache-location node_modules/.cache/eslint --fix --format stylish --max-warnings 0 --ignore-path .eslintignore --report-unused-disable-directives",
    "format": "prettier --config .prettierrc --ignore-path .prettierignore --write 'src/**/*.{js,jsx,ts,tsx,json,css,scss,md}' --log-level warn && stylelint 'src/**/*.{css,scss}' --config .stylelintrc.js --fix --formatter verbose --cache --cache-location node_modules/.cache/stylelint",
    "typecheck": "tsc --noEmit --project tsconfig.json --skipLibCheck false --strict --exactOptionalPropertyTypes --noImplicitReturns --noFallthroughCasesInSwitch --noUncheckedIndexedAccess --incremental --tsBuildInfoFile node_modules/.cache/tsc-buildinfo",
    "deploy": "npm run build && aws s3 sync ./dist s3://my-app-bucket --delete --cache-control max-age=31536000 --exclude '*.html' --exclude '*.map' && aws s3 sync ./dist s3://my-app-bucket --delete --cache-control max-age=0 --include '*.html' && aws cloudfront create-invalidation --distribution-id E1234567890123 --paths '/*' && curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"ðŸš€ Deployment completed successfully\"}' $SLACK_WEBHOOK_URL",
    "docs": "typedoc --out docs --target ES6 --theme minimal --mode file --exclude '**/node_modules/**' --exclude '**/*.test.ts' --exclude '**/*.spec.ts' --includeDeclarations --excludeExternals --readme README.md --plugin typedoc-plugin-markdown --plugin typedoc-plugin-missing-exports",
    "clean": "rimraf dist coverage .nyc_output node_modules/.cache .eslintcache .stylelintcache webpack-stats.json && npm cache clean --force && docker system prune -f --volumes",
    "security": "npm audit --audit-level moderate --json > audit-report.json && snyk test --severity-threshold=medium --dev --json > snyk-report.json && bandit -r src/ -f json -o security-report.json -ll && safety check --json --output safety-report.json",
    "performance": "lighthouse http://localhost:3000 --output json --output html --output-path ./reports/lighthouse --chrome-flags='--headless --no-sandbox --disable-gpu --disable-dev-shm-usage --disable-extensions' --preset=desktop --budget-path=budget.json --throttling-method=simulate --throttling.cpuSlowdownMultiplier=4 --throttling.rttMs=150 --throttling.throughputKbps=1600",
    "docker:build": "docker build -t my-app:latest --build-arg NODE_ENV=production --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') --build-arg VCS_REF=$(git rev-parse --short HEAD) --build-arg VERSION=$(npm version --json | jq -r .version) --build-arg COMMIT_SHA=$(git rev-parse HEAD) --no-cache --progress=plain --label 'maintainer=smart-run' --label 'version=1.0.0' .",
    "docker:run": "docker run -d --name my-app-container -p 3000:3000 --env-file .env.production --restart unless-stopped --memory=512m --cpus=0.5 --health-cmd='curl -f http://localhost:3000/health || exit 1' --health-interval=30s --health-timeout=10s --health-retries=3 my-app:latest",
    "e2e": "cypress run --config baseUrl=http://localhost:3000 --browser chrome --headless --record --key $CYPRESS_RECORD_KEY --parallel --ci-build-id $CI_BUILD_ID --group 'UI Tests' --spec 'cypress/integration/**/*.spec.js' --reporter mochawesome --reporter-options 'reportDir=cypress/reports,overwrite=false,html=true,json=true'",
    "storybook": "start-storybook -p 6006 --quiet --no-manager-cache --config-dir .storybook --static-dir public --ci --docs --addon-docs --addon-controls --addon-actions --addon-viewport --addon-backgrounds"
  },
  "keywords": ["demo", "smart-run", "enhanced-format"],
  "author": "smart-run",
  "license": "MIT"
}
